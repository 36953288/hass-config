
automation:

    ####################################################
    #                                                  #
    #                   AUTOMATIONS                    #
    #                                                  #
    ####################################################

  - alias: homeassistant_start
    initial_state: true
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: frontend.set_theme
        data:
          name: tablet
      - service: shell_command.fullykiosk_restart_app
      - service: mqtt.publish
        data:
          topic: cmnd/tasmotas/status
          payload: 10
      - service: browser_mod.close_popup
      - delay:
          seconds: 1
      - service: browser_mod.lovelace_reload
      - choose:
        - conditions:
            - condition: state
              entity_id: light.hall
              state: 'off'
          sequence:
            - service: switch.turn_on
              entity_id: switch.fullykiosk_screensaver
      - delay:
          seconds: 30
      - service: homekit.start

  - alias: lovelace_updated_ignore
    mode: restart
    initial_state: true
    trigger:
      - platform: event
        event_type: lovelace_updated
    action:
      - service: browser_mod.toast
        data:
          duration: 1
          message: ' '

  - alias: restart_homekit
    initial_state: true
    trigger:
      - platform: time
        at: 04:00:00
    action:
      - service: homekit.start

  - alias: clear_log_filesize
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.home_assistant_log
        above: 50
    action:
      - service: shell_command.clear_logs

  - alias: computer_on_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.computer_imac
        from: 'off'
        to: 'on'
    action:
      - delay:
          seconds: 10
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.imac_cpu', 'sensor.imac_mem', 'sensor.imac_system_ssd', 'sensor.imac_macintosh_hd', 
          'sensor.imac_time_machine', 'sensor.monitors_volume', 'sensor.imac_uptime']

  - alias: tv_on_lights
    initial_state: true
    trigger:
      - platform: state
        entity_id: media_player.sony_bravia
        from: 'off'
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.tvlampa

  - alias: hacs_version_grep
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hacs
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.hacs_version

  - alias: update_hass_release_notes
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: sensor.hass_version
          state: Senaste
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.hass_release_notes

  - alias: no_motion_bathroom
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.motion_badrum
        to: 'off'
        for:
          minutes: 30
    action:
      - service: light.turn_off
        data:
          entity_id: light.badrum

  - alias: krisinformation_visibility
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.krisinformation_time_trigger
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.krisinformation_time_trigger
              state: 'on'
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.krisinformation_visibility
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.krisinformation_visibility

    ####################################################
    #                                                  #
    #                  NOTIFICATIONS                   #
    #                                                  #
    ####################################################

  - alias: toast
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['input_boolean.motion_garderob', 'input_boolean.motion_badrum', 
          'binary_sensor.wemo_motion']
        from: 'off'
        to: 'on'
    action:
      - service: browser_mod.toast
        data_template:
          duration: 8000
          message: >
            Rörelse detekterat i {{ trigger.to_state.name }}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >
            {{ trigger.entity_id }}

  - alias: notification_motion_hall
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.motion_hall
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: shell_command.imac_notify_motion_hallway

  - alias: notify_hass_rc
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version_latest_beta
    condition:
      - condition: state
        entity_id: sensor.hass_dev_release
        state:
          ['Idag', 'Släppt']
    action:
      - service: notify.mobile_app_iphone
        data_template:
          message: >
            {{ states(trigger.entity_id) }} släppt

    ####################################################
    #                                                  #
    #                  SCAN INTERVAL                   #
    #                                                  #
    ####################################################

  - alias: conditional_scan_interval
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.imac_ip', 'sensor.imac_system_ssd', 'sensor.imac_macintosh_hd', 
          'sensor.imac_time_machine', 'sensor.imac_mem', 'sensor.monitors_volume', 
          'binary_sensor.monitors_mute_check', 'sensor.imac_uptime', 'sensor.imac_cpu']

  - alias: tasmota_scan_interval
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: /5
    action:
      - service: mqtt.publish
        data:
          topic: cmnd/tasmotas/status
          payload: 10

    ####################################################
    #                                                  #
    #                     MONITORS                     #
    #                                                  #
    ####################################################

  - alias: monitors_volume_slider
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_number.monitors_volume
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: shell_command.monitors_volume_slider
      - service: homeassistant.update_entity
        entity_id: binary_sensor.monitors_mute_check
      - service: homeassistant.update_entity
        entity_id: sensor.monitors_volume

  - alias: monitors_volume_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.monitors_volume
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: homeassistant.update_entity
        entity_id: binary_sensor.monitors_mute_check
      - service: input_number.set_value
        data_template:
          entity_id: input_number.monitors_volume
          value: >
            {% set max_volume = 75 %} {% set min_volume = 7 %}
            {% if states(trigger.entity_id) | int > max_volume %}
              {{ max_volume }}
            {% elif states(trigger.entity_id) | int < min_volume %}
              {{ min_volume }}
            {% else %}
              {{ states(trigger.entity_id) }}
            {% endif %}

  - alias: eq_calibration
    mode: queued
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.wemo_monitors
        from: ['on', 'off']
        to: ['on', 'off']
    # condition:
    #   - condition: template
    #     value_template: >
    #       {{ trigger.from_state.state != 'unknown' and 
    #       trigger.to_state.state != 'unknown' }}
    action:
      - service: shell_command.reference_click
      - delay:
          milliseconds: 100
      - service: shell_command.reference_kill
      - delay:
          milliseconds: 100
      - choose:
        - conditions:
            - condition: state
              entity_id: switch.wemo_monitors
              state: 'on'
          sequence:
            - service: shell_command.reference_monitors
        default:
          - service: shell_command.reference_headphones

  - alias: turn_off_monitors
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.computer_imac
        from: 'on'
        to: 'off'
        for:
          minutes: 5
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_monitors

    ####################################################
    #                                                  #
    #                       FAN 1                      #
    #                                                  #
    ####################################################

  - alias: wemo_fan_turn_off
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.wemo_fan
        from: 'off'
        to: 'on'
        for:
          hours: "{{ states('input_number.wemo_fan_timer') | int }}"
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_fan

    ####################################################
    #                                                  #
    #                       FAN 2                      #
    #                                                  #
    ####################################################

  - alias: fan_anslut_turn_off
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.fan_anslut
        from: 'off'
        to: 'on'
        for:
          hours: "{{ states('input_number.fan_anslut_timer') | int }}"
    action:
      - service: switch.turn_off
        entity_id: switch.fan_anslut

  - alias: fan_anslut_turn_on_temp
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.hall_temperature
        above: 24
    condition:
      condition: and
      conditions:
        - condition: time
          after: '20:00:00'
          before: '07:00:00'
        - condition: state
          entity_id:
            ['person.mattias', 'person.sanja']
          state: home
    action:
      - service: switch.turn_on
        entity_id: switch.fan_anslut

  - alias: fan_anslut_oscillate
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.fan_anslut_oscillate
    action:
      - service: remote.send_command
        data:
          entity_id: remote.broadlink
          device: fläkt
          delay_secs: 0.2
          command: swing_1

  - alias: fan_anslut_speed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.fan_anslut_speed
    action:
      - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ trigger.from_state.state == 'Max' and trigger.to_state.state == 'Medium' or 
                trigger.from_state.state == 'Medium' and trigger.to_state.state == 'Tyst' or 
                trigger.from_state.state == 'Tyst' and trigger.to_state.state == 'Max' }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                device: fläkt
                delay_secs: 0.2
                command: speed_1
                num_repeats: 2
        - conditions:
            - condition: template
              value_template: >
                {{ trigger.from_state.state == 'Max' and trigger.to_state.state == 'Tyst' or 
                trigger.from_state.state == 'Medium' and trigger.to_state.state == 'Max' or 
                trigger.from_state.state == 'Tyst' and trigger.to_state.state == 'Medium' }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                device: fläkt
                delay_secs: 0.2
                command: speed_1

    ####################################################
    #                                                  #
    #                      TABLET                      #
    #                                                  #
    ####################################################

  - alias: fullykiosk_brightness_slider
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_number.fullykiosk_brightness_slider
    action:
      - service: shell_command.fullykiosk_brightness_slider

  - alias: fullykiosk_close_popup
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.fullykiosk_screensaver
        from: 'off'
        to: 'on'
        for:
          minutes: 10
    action:
      - service: browser_mod.close_popup
        data:
          deviceID: tablet

  - alias: fullykiosk_turn_on_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.motion_hall
        from: 'off'
        to: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.fullykiosk_screensaver
      - service_template: input_number.set_value
        data_template:
          entity_id: input_number.fullykiosk_brightness_slider
          value: >
            {{ 90 if is_state('sun.sun', 'above_horizon') else 60 }}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >
            {{ trigger.entity_id }}

  - alias: fullykiosk_turn_off_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.hall
        from: 'on'
        to: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.fullykiosk_screensaver

    ####################################################
    #                                                  #
    #                     LOADING                      #
    #                                                  #
    ####################################################

  - alias: turn_off_loading_wheel
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['media_player.sony_bravia', 'media_player.samsung', 'switch.computer_imac', 
          'switch.playstation_4', 'switch.fan_anslut', 'switch.air_purifier']
    action:
      - service: input_boolean.turn_off
        data_template:
          entity_id: >
            {{ trigger.entity_id | replace('media_player', 'input_boolean') | 
            replace('switch', 'input_boolean') }}

  - alias: turn_off_loading_wheel_failsafe
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['input_boolean.sony_bravia', 'input_boolean.samsung', 'input_boolean.computer_imac', 
          'input_boolean.playstation_4', 'input_boolean.fan_anslut', 'input_boolean.air_purifier']
        to: 'on'
        for:
          minutes: 1
    action:
      - service: input_boolean.turn_off
        data_template:
          entity_id: >
            {{ trigger.entity_id }}

    ####################################################
    #                                                  #
    #                    HDMI / TV                     #
    #                                                  #
    ####################################################

  - alias: hdmi_input_select
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.hdmi
    action:
      - service: media_player.select_source
        data_template:
          entity_id: media_player.sony_bravia
          source: >
            {{ states(trigger.entity_id) }}

  - alias: hdmi2_input_select
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.hdmi2
    action:
      - service: media_player.select_source
        data_template:
          entity_id: media_player.samsung
          source: >
            {{ states(trigger.entity_id) }}

  - alias: turn_on_tv_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.sony_bravia
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.vardagsrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.vardagsrum
          command: menu

  - alias: turn_on_tv2_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.samsung
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.sovrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.sovrum
          command: menu

    ####################################################
    #                                                  #
    #                  LAUNDRY TIMER                   #
    #                                                  #
    ####################################################

  - alias: laundry_timer_reveal
    mode: restart
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
          {{ as_timestamp(start_time) - as_timestamp(now()) < 10 * 60 if start_time != None }}
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.laundry_timer_visibility
      - delay:
          hours: 4
      - service: input_boolean.turn_off
        entity_id: input_boolean.laundry_timer_visibility

  - alias: laundry_timer_alert
    initial_state: true
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.laundry
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.tablet
          media_content_id: /local/sound/timer.mp3
          media_content_type: music
      - delay:
          seconds: 2
      - service: media_player.play_media
        data_template:
          entity_id: media_player.tablet
          media_content_id: >
            {{ ['/local/sound/tts_custom/timer_tvatten_ar_fardig.mp3',
                '/local/sound/tts_custom/timer_tvatten_ar_klar.mp3',
                '/local/sound/tts_custom/timer_dags_att_ga_ner.mp3'] | random }}
          media_content_type: music
      - service: notify.mobile_app_iphone
        data_template:
          message: >
            {{'\U0001F9FA'}} {{ ['Tvätten är färdig', 'Tvätten är klar', 'Dags att gå ner'] | random }}
      - service: shell_command.imac_notify_laundry
      - delay:
          seconds: 3

    ####################################################
    #                                                  #
    #                      VACUUM                      #
    #                                                  #
    ####################################################

  - alias: roborock_speed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.roborock_speed
    action:
      - service: vacuum.set_fan_speed
        data_template:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          fan_speed: >
            {% if is_state(trigger.entity_id, 'Tyst') %} Silent
            {% elif is_state(trigger.entity_id, 'Standard') %} Standard
            {% elif is_state(trigger.entity_id, 'Medium') %} Medium
            {% elif is_state(trigger.entity_id, 'Turbo') %} Turbo
            {% else %} Standard
            {% endif %}

  - alias: roborock_speed_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.roborock_speed
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.roborock_speed
          option: >
            {% if is_state(trigger.entity_id, 'Silent') %} Tyst
            {% elif is_state(trigger.entity_id, 'Standard') %} Standard
            {% elif is_state(trigger.entity_id, 'Medium') %} Medium
            {% elif is_state(trigger.entity_id, 'Turbo') %} Turbo
            {% else %} Standard
            {% endif %}

      ####################################################
      #                                                  #
      #                CONDITIONAL MEDIA                 #
      #                                                  #
      ####################################################

  - alias: conditional_media_playing
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.playstation_4', 'media_player.google_nest_mini']
        to: playing
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.conditional_media
          option: >
            {{ trigger.to_state.name }}

  - alias: conditional_media_paused_idle
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.playstation_4', 'media_player.google_nest_mini']
        to:
          ['off', 'idle', 'standby']
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.playstation_4', 'media_player.google_nest_mini']
        to: paused
        for:
          minutes: 10
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.sovrum, 
               states.media_player.playstation_4, states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

  - alias: conditional_media_all_off
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'idle') and
          is_state('media_player.sovrum', 'idle') and
          is_state('media_player.playstation_4', 'standby') and
          is_state('media_player.google_nest_mini', 'off') }}
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.conditional_media
          option: Senast nedladdat

  - alias: conditional_media_atv1_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'paused') and 
          is_state_attr('media_player.vardagsrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.playstation_4, 
               states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

  - alias: conditional_media_atv2_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.sovrum', 'paused') and 
          is_state_attr('media_player.sovrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.playstation_4, 
               states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

    ####################################################
    #                                                  #
    #                     UI SOUND                     #
    #                                                  #
    ####################################################

  - alias: ui_sound_popup
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: browser_mod
          service: popup
    condition:
      - condition: state
        entity_id: switch.fullykiosk_screensaver
        state: 'off'
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.tablet
          media_content_id: /local/sound/popup.m4a
          media_content_type: music

    ####################################################
    #                                                  #
    #                       TEST                       #
    #                                                  #
    ####################################################

    # ...