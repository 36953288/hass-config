homeassistant_latitude: [REDACTED]
homeassistant_longitude: [REDACTED]
homeassistant_elevation: [REDACTED]

recorder_db_url: mysql://homeassistant:[REDACTED PASSWORD]@[REDACTED IP]/homeassistant?charset=utf8mb4

iphonedetect_mattias: [REDACTED IP]
iphonedetect_sanja: [REDACTED IP]

wemo_static:
  - [REDACTED IP]
  - [REDACTED IP]
  - [REDACTED IP]

spotify_client_id: [REDACTED]
spotify_client_secret: [REDACTED]

google_client_id: [REDACTED]
google_client_secret: [REDACTED]

plex_token: [REDACTED]
plex_host: [REDACTED IP]
plex_port: [REDACTED PORT]
plex_availability: curl [REDACTED IP:PORT] > /dev/null && echo ON || echo OFF

unifi_host: [REDACTED IP]
unifi_username: [REDACTED]
unifi_password: [REDACTED]

influxdb_host: [REDACTED IP]
influxdb_port: [REDACTED]
influxdb_org: [REDACTED]
influxdb_token: [REDACTED]

playstation_5_state: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'timeout 9 bash -c "playactor check --host-name PS5-635 | jq -r \".status\"" || echo "STANDBY"'
playstation_5_wake: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'playactor wake --host-name PS5-635'
playstation_5_sleep: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'playactor standby --host-name PS5-635'
ps5_playactor_update: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'playactor about | grep -q latest && echo OFF || echo ON'

public_ip: [REDACTED IP]
homekit_ip_address: [REDACTED IP]
skanetrafiken: https://api.resrobot.se/v2/trip?key=[REDACTED]&originCoordLat=[REDACTED]&originCoordLong=[REDACTED]&destId=[REDACTED]&format=json
darksky_api_key: [REDACTED]

ha_dockermon_cpu: [REDACTED IP]/container/home-assistant/stats
ha_dockermon_uptime: [REDACTED IP]/container/home-assistant
ha_dockermon_watchtower: [REDACTED IP]/container/watchtower
ha_dockermon_restart_container: 'curl [REDACTED URL:PORT]/container/home-assistant/restart'

wake_on_lan_mac: [REDACTED MAC]
wake_on_lan_host: [REDACTED IP]

kemper_installed: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] "cat /Applications/Rig\ Manager.app/Contents/Info.plist | grep -A2  '<key>CFBundleShortVersionString</key>' | grep '<string>' |cut -d\> -f2 |cut -d\< -f1"
kemper_username: [REDACTED]
kemper_password: [REDACTED]

waste_collection_schedule_url: https://nsr.se/wp/wp-admin/admin-ajax.php?action=fetchDataFromFetchPlannerCalendar&query=[REDACTED]
switchbot_battery: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'cd pySwitchbot/ && sudo python3 switchbot.py'

imac_switchbot: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa pi@[REDACTED IP] 'cd ~/python-host && sudo python3 switchbot_py3.py --device [REDACTED MAC]'
imac_notify_motion_hall: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e '\''display notification "Rörelse i hallen detekterat" with title "Home Assistant"'\'''
imac_notify_laundry: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e '\''display notification "Tvätten är klar" with title "Home Assistant"'\'''

imac_off: 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -h now'
imac_sleep: 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -s now'
imac_restart: 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -r now'

imac_system_ssd: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'df / | awk '\''{ print $5 }'\'' | tail -n 1 | cut -d'\''%'\'' -f1'
imac_macintosh_hd: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'df /Volumes/Macintosh\ HD | awk '\''{ print $5 }'\'' | tail -n 1 | cut -d'\''%'\'' -f1'

imac_cpu: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'top -l 1 | awk '\''/CPU usage/ {printf("%.1f\n", $3)}'\'''
imac_mem: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'ps -A -o %mem | awk '\''{ mem += $1} END {print mem}'\'''
imac_ip: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'dig @resolver1.opendns.com ANY myip.opendns.com +short'
imac_uptime: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sysctl -n kern.boottime | awk '{print $4}' | sed 's/,//g'

monitors_mute_on: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume with output muted"'
monitors_mute_off: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume without output muted"'
monitors_mute_check: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "output muted of (get volume settings)"'
monitors_volume_slider: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume output volume {{ states('input_number.monitors_volume') | int }} --100%"'
monitors_update_volume: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "output volume of (get volume settings)"'

reference_click: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "ignoring application responses" -e "tell application \"System Events\"" -e "click menu bar item 1 of menu bar 2 of application process \"Reference Systemwide\"" -e "end tell" -e "end ignoring"'
reference_kill: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'killall System\ Events'
reference_monitors: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "tell application \"System Events\"" -e "click menu item \"KRK Monitors\" of menu 1 of menu bar item 1 of menu bar 2 of application process \"Reference Systemwide\"" -e "end tell"'
reference_headphones: ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "tell application \"System Events\"" -e "click menu item \"Beyerdynamic DT 990 Pro\" of menu 1 of menu bar item 1 of menu bar 2 of application process \"Reference Systemwide\"" -e "end tell"'

ir_fan_power: b64:[REDACTED IR]
ir_fan_swing: b64:[REDACTED IR]
ir_fan_speed: b64:[REDACTED IR]

ir_purifier_power: b64:[REDACTED IR]
ir_purifier_auto: b64:[REDACTED IR]
ir_purifier_speed_down: b64:[REDACTED IR]
ir_purifier_speed_up: b64:[REDACTED IR]
ir_purifier_turbo: b64:[REDACTED IR]

ir_ac_power: b64:[REDACTED IR]
ir_ac_swing: b64:[REDACTED IR]
ir_ac_speed_up: b64:[REDACTED IR]
ir_ac_speed_down: b64:[REDACTED IR]
