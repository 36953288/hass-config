
- alias: delay_homekit_start
  trigger:
  - platform: homeassistant
    event: start
  action:
  - delay: 00:01:00
  - service: homekit.start

- alias: restart_homekit
  trigger:
    platform: time
    at: '04:00:00'
  action:
  - service: homekit.start

- alias: set_theme_on_startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: slate

- alias: toast_motion_hall
  trigger:
  - platform: state
    entity_id: input_boolean.motion_hall
    from: 'off'
    to: 'on'
  action:
    service: browser_mod.toast
    data:
      duration: 8000
      message: Rörelse detekterat i hallen

- alias: toast_motion_garderob
  trigger:
  - platform: state
    entity_id: input_boolean.motion_garderob
    from: 'off'
    to: 'on'
  action:
    service: browser_mod.toast
    data:
      duration: 8000
      message: Rörelse detekterat i klädkammaren

- alias: toast_motion_badrum
  trigger:
  - platform: state
    entity_id: input_boolean.motion_badrum
    from: 'off'
    to: 'on'
  action:
    service: browser_mod.toast
    data:
      duration: 8000
      message: Rörelse detekterat i badrummet

- alias: toast_motion_vardagsrum
  trigger:
  - platform: state
    entity_id: binary_sensor.wemo_motion
    from: 'off'
    to: 'on'
  action:
    service: browser_mod.toast
    data:
      duration: 8000
      message: Rörelse detekterat i vardagsrummet

- alias: monitorer_volume_slider
  trigger:
    platform: state
    entity_id: input_number.monitorer_volume
  condition:
    - condition: state
      entity_id: switch.dator_template
      state: 'on'
  action:
    service: shell_command.monitorer_volume_slider

- alias: tablet_brightness_slider
  trigger:
    platform: state
    entity_id: input_number.fullykiosk_brightness_slider
  action:
    service: shell_command.fullykiosk_brightness_slider

- alias: monitorer_volume_update
  trigger:
    - platform: state
      entity_id: sensor.getvolume
    - platform: event
      event_type: call_service
      event_data: 
        domain: shell_command
        service: monitorer_volume_up
    - platform: event
      event_type: call_service
      event_data: 
        domain: shell_command
        service: monitorer_volume_down
  condition:
    - condition: state
      entity_id: switch.dator_template
      state: 'on'
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.getvolume
    - service: homeassistant.update_entity
      entity_id: sensor.monitorer_mute_check
    - service: input_number.set_value
      data_template:
        entity_id: input_number.monitorer_volume
        value: "{{ states('sensor.getvolume') }}"

- alias: reference_monitors
  trigger:
    - platform: state
      entity_id: switch.wemo_monitorer
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: switch.dator_template
      state: 'on'
  action:
    service: script.reference_monitors

- alias: reference_headphones
  trigger:
    - platform: state
      entity_id: switch.wemo_monitorer
      from: 'on'
      to: 'off'
  condition:
    - condition: state
      entity_id: switch.dator_template
      state: 'on'
  action:
    service: script.reference_headphones

- alias: turn_off_monitorer
  trigger:
    - platform: state
      entity_id: switch.dator_template
      from: 'on'
      to: 'off'
      for:
        minutes: 5
  action:
  - service: switch.turn_off
    entity_id: switch.wemo_monitorer

- alias: turn_off_fläkt
  trigger:
    platform: state
    entity_id: switch.wemo_flakt
    from: 'off'
    to: 'on'
    for: 
      hours: "{{ states('input_number.flakt_minuter') | int }}"
  action:
    - service: switch.turn_off
      entity_id: switch.wemo_flakt

- alias: turn_on_fläkt_temp
  trigger:
    platform: numeric_state
    entity_id: sensor.sensor_hall_temperature
    above: 26
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: device_tracker.mattias
        state: 'home'
      - condition: state
        entity_id: device_tracker.sanja
        state: 'home'
  action:
    - service: switch.turn_on
      entity_id: switch.wemo_flakt

- alias: fullykiosk_brightness_slider
  trigger:
      platform: homeassistant
      event: start
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.fullykiosk_brightness_slider
        value: "{{ (state_attr('sensor.fullykiosk', 'screenBrightness') | int / 2.55) | round(0) }}"

- alias: fullykiosk_automatic_brightness
  trigger:
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    - service_template: input_number.set_value
      data_template:
        entity_id: input_number.fullykiosk_brightness_slider
        value: >
          {% if is_state('sun.sun', 'above_horizon') %}
            200
          {% else %}
            100
          {% endif %}

- alias: update_imac_sensors
  trigger:
    - platform: state
      entity_id: switch.dator_template
      from: 'off'
      to: 'on'
  action:
    - service: homeassistant.update_entity
      entity_id:
        ['sensor.imac_cpu_per', 'sensor.imac_mem_per', 'sensor.imac_system_ssd', 'sensor.imac_macintosh_hd', 'sensor.imac_time_machine', 'sensor.getvolume', 'sensor.macos_uptime']

- alias: close_popups_on_tablet
  trigger:
    - platform: state
      entity_id: switch.fullykiosk_screen
      from: 'on'
      to: 'off'
      for:
        seconds: 30
  action:
    - service: browser_mod.close_popup
      data:
        deviceID: tablet

- alias: turn_off_tv_loading
  trigger:
    - platform: state
      entity_id: media_player.sony_bravia_tv
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: media_player.sony_bravia_tv
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.loading_braviatv
      from: 'off'
      to: 'on'
      for:
        minutes: 1
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.loading_braviatv

- alias: turn_off_tv2_loading
  trigger:
    - platform: state
      entity_id: switch.samsung_6_series_50
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: switch.samsung_6_series_50
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.loading_samsungtv
      from: 'off'
      to: 'on'
      for:
        minutes: 1
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.loading_samsungtv

- alias: turn_off_dator_loading
  trigger:
    - platform: state
      entity_id: switch.dator_template
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: switch.dator_template
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.loading_dator
      from: 'off'
      to: 'on'
      for:
        minutes: 1
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.loading_dator

- alias: turn_off_ps4_loading
  trigger:
    - platform: state
      entity_id: switch.playstation_template
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: switch.playstation_template
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: input_boolean.loading_playstation
      from: 'off'
      to: 'on'
      for:
        minutes: 1
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.loading_playstation

- alias: notification_motion_hall
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: input_boolean.motion_hall
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: switch.dator_template
      state: 'on'
  action:
    - service: shell_command.ssh_motion_hall_notify

- alias: hdmi_input_select
  trigger:
  - platform: state
    entity_id: input_select.hdmi
  action:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.sony_bravia_tv
      source: >-
        {% if is_state('input_select.hdmi', 'HDMI 1') %}
          HDMI 1
        {% elif is_state('input_select.hdmi', 'HDMI 2/MHL') %}
          HDMI 2/MHL
        {% elif is_state('input_select.hdmi', 'HDMI 3') %}
          HDMI 3
        {% elif is_state('input_select.hdmi', 'HDMI 4') %}
          HDMI 4
        {% else %}
          HDMI 1
        {% endif %}

- alias: hdmi_input_select_update
  trigger:
  - platform: state
    entity_id: media_player.sony_bravia_tv
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.hdmi
      option: >-
        {% set source = state_attr('media_player.sony_bravia_tv', 'media_title') %}
        {% if source == 'HDMI 1' %}
          HDMI 1
        {% elif source == 'HDMI 2/MHL' %}
          HDMI 2/MHL
        {% elif source == 'HDMI 3' %}
          HDMI 3
        {% elif source == 'HDMI 4' %}
          HDMI 4
        {% else %}
          HDMI 1
        {% endif %}

- alias: hdmi2_input_select
  trigger:
  - platform: state
    entity_id: input_select.hdmi2
  action:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.samsung_tv_remote
      source: >-
        {% if is_state('input_select.hdmi2', 'HDMI') %}
          HDMI
        {% elif is_state('input_select.hdmi2', 'TV') %}
          TV
        {% else %}
          HDMI
        {% endif %}

- alias: hdmi2_input_select_update
  trigger:
  - platform: state
    entity_id: media_player.samsung_tv_remote
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.hdmi2
      option: >-
        {% set source = states('sensor.samsung_6_series_50_media_input_source') %}
        {% if source == 'HDMI3' %}
          HDMI
        {% else %}
          TV
        {% endif %}

- alias: turn_off_motion_hall
  trigger:
  - platform: state
    entity_id: input_boolean.motion_hall
    from: 'off'
    to: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.motion_hall

- alias: turn_off_motion_garderob
  trigger:
  - platform: state
    entity_id: input_boolean.motion_garderob
    from: 'off'
    to: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.motion_garderob

- alias: turn_off_motion_badrum
  trigger:
  - platform: state
    entity_id: input_boolean.motion_badrum
    from: 'off'
    to: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.motion_badrum

- alias: turn_on_motion_vardagsrum
  trigger:
  - platform: state
    entity_id: binary_sensor.wemo_motion
    from: 'off'
    to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.motion_vardagsrum
      
- alias: turn_off_motion_vardagsrum
  trigger:
  - platform: state
    entity_id: input_boolean.motion_vardagsrum
    from: 'off'
    to: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.motion_vardagsrum

- alias: apple_tv_notitle_true
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.vardagsrum_2', 'media_title') == 'Nothing playing' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.appletv_notitle

- alias: apple_tv_notitle_false
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.vardagsrum_2', 'media_title') != 'Nothing playing' %}true{% endif %}"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.appletv_notitle

- alias: ui_sound_on
  trigger:
  - platform: state
    entity_id:
      ['light.belysning', 'light.fonsterlampa', 'light.datorlampa', 'light.taklampor', 'light.mattias', 'light.sanja', 'light.badrum', 'light.taklampa', 'light.kladkammare_2', 
      'light.hall', 'switch.wemo_flakt', 'switch.wemo_monitorer', 'input_boolean.loading_dator', 'input_boolean.loading_playstation', 'input_boolean.loading_braviatv', 'input_boolean.loading_samsungtv']
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: switch.fullykiosk_screen
      state: 'on'
  action:
  - service: media_player.play_media
    data:
      entity_id: media_player.tablet
      media_content_id: /local/on.m4a
      media_content_type: music

- alias: ui_sound_off
  trigger:
  - platform: state
    entity_id:
      ['light.belysning', 'light.fonsterlampa', 'light.datorlampa', 'light.taklampor', 'light.mattias', 'light.sanja', 'light.badrum', 'light.taklampa', 'light.kladkammare_2', 
      'light.hall', 'switch.wemo_flakt', 'switch.wemo_monitorer', 'switch.dator_template', 'switch.playstation_template', 'switch.tv_template', 'switch.tv2_template']
    from: 'on'
    to: 'off'
  condition:
    - condition: state
      entity_id: switch.fullykiosk_screen
      state: 'on'
  action:
  - service: media_player.play_media
    data:
      entity_id: media_player.tablet
      media_content_id: /local/off.m4a
      media_content_type: music

- alias: ui_sound_popup
  trigger:
    platform: event
    event_type: call_service
    event_data: 
      domain: browser_mod
      service: popup
  condition:
    - condition: state
      entity_id: switch.fullykiosk_screen
      state: 'on'
  action:
  - service: media_player.play_media
    data:
      entity_id: media_player.tablet
      media_content_id: /local/popup.m4a
      media_content_type: music

- alias: turn_on_fullykiosk_screen
  initial_state: 'false'
  trigger:
  - platform: state
    entity_id: input_boolean.motion_hall
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: sensor.fullykiosk_plugged
      state: 'Ja'
  action:
    - service: switch.turn_on
      entity_id: switch.fullykiosk_screen

- alias: clear_log_filesize
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_assistant_log
    above: 50
  action:
  - service: shell_command.clear_logs